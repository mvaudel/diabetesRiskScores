test <- c("bla.rs1.bla", "bla.rs2.bla")
regexpr("\\.", test) - 1)
regexpr("\\.", test)
substring(test, regexpr("\\.", test))
substring(test, first = regexpr("\\.", test)+1)
strsplit(x = "bla.rs1.bla", split = ".")[2]
strsplit(x = "bla.rs1.bla", split = ".")[[1]][2]
strsplit(x = "bla.rs1.bla", split = ".")
strsplit(x = "bla.rs1.bla", split = "\\.")
strsplit(x = test, split = "\\.")
test1 <- strsplit(x = test, split = "\\.")
test1[[]][2]
?unlist
lapply(test1, "[[", 2)
unlist(lapply(test1, "[[", 2))
unlist(lapply(strsplit(x = test, split = "\\."), "[[", 2))
test1 <- strsplit(x = test, split = "\\.")
test1
library(ggplot2)
library(scico)
palette <- 'cork'
t1dColor <- scico(n = 1, begin = 0.15, end = 0.15, palette = palette)
controlColor <- scico(n = 1, begin = 0.85, end = 0.85, palette = palette)
# Parameters
## Input files
scoresFile <- "C:\\Projects\\mgh\\updated_with_21Kdataset_Oram_T1D-GRS.gz"
phenoFile <- "C:\\Projects\\mgh\\T1D_curated_set_2018_08_14_reduced.csv"
## Output folder
plotFolder <- "C:\\Projects\\mgh\\plots"
## Colors
palette <- 'cork'
t1dColor <- scico(n = 1, begin = 0.15, end = 0.15, palette = palette)
controlColor <- scico(n = 1, begin = 0.85, end = 0.85, palette = palette)
scoresDF <- read.table(scoresFile, header = T, sep = " ", stringsAsFactors = F)
phenoDF <- read.table(phenoFile, header = T, sep = ",", stringsAsFactors = F)
names(phenoDF)
names(phenoDF) <- c("id", "t1d", "control")
sum(phenoDF$id)
table(phenoDF$t1d)
table(phenoDF$control)
theme_set(theme_bw(base_size = 11))
View(scoresDF)
sample <- "R01C01-10000077_R01C01-10000077"
startI <- regexpr(sample, pattern = "-")
startI
endI <- regexpr(sample, pattern = "_")
substr(sample, start = startI, stop = endI)
startI <- regexpr(sample, pattern = "-") + 1
endI <- regexpr(sample, pattern = "_") - 1
id <- substr(sample, start = startI, stop = endI)
id
#' Returns the id from a plink sample name.
#'
#' @param sample the plink sample name
#'
#' @return the sample id
getId <- function(sample) {
startI <- regexpr(sample, pattern = "-") + 1
endI <- regexpr(sample, pattern = "_") - 1
id <- substr(sample, start = startI, stop = endI)
return(id)
}
scoresDF$id <- apply(X = scoresDF$Sample, FUN = getId)
scoresDF$id <- sapply(X = scoresDF$Sample, FUN = getId)
sum(scoresDF$id %in% phenoDF$id)
sum(! scoresDF$id %in% phenoDF$id)
sum(! phenoDF$id %in% scoresDF$id)
ggplot() + geom_point(x = 1:length(phenoDF$id), y = phenoDF$id, col = ! phenoDF$id %in% scoresDF$id)
ggplot() + geom_point(aes(x = 1:length(phenoDF$id), y = phenoDF$id, col = ! phenoDF$id %in% scoresDF$id))
mergedDF <- merge(x = phenoDF, y = scoresDF, by = "id", all = F)
nrow(scoresDF)
nrow(phenoDF)
nrow(mergedDF)
table(mergedDF$control)
names(mergedDF)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score))
plot(scoreDistribution)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score, fill = control, col = control), alpha = 0.5)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_col_manual(values = c(t1dColor, controlColor))
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score, fill = control, col = control), alpha = 0.5)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
library(ggforce)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = control, y = Score, col = control), alpha = 0.5)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
?geom_sina
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score, fill = control, col = control), alpha = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = control, y = Score, col = control), alpha = 0.1, )
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score, fill = control, col = control), alpha = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = control, y = Score, col = control), alpha = 0.1, scale = F)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = control, y = Score, col = control), alpha = 0.1, scale = F)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score, fill = control, col = control), alpha = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = control, y = Score, col = control), alpha = 0.1, scale = F, maxwidth = 0.8)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score, fill = control, col = control), alpha = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = control, y = Score, col = control), alpha = 0.1, scale = F, maxwidth = 1)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score, fill = control, col = control), alpha = 0.5, width = 1)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = control, y = Score, col = control), alpha = 0.1, scale = F, maxwidth = 1)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score, fill = control, col = control), alpha = 0.5, width = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = control, y = Score, col = control), alpha = 0.1, scale = F, maxwidth = 1)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = control, y = Score, fill = control, col = control), alpha = 0.5, width = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = control, y = Score, col = control), alpha = 0.2, scale = F, maxwidth = 1)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
plot(scoreDistribution)
png(filename = file.path(plotFolder, "scores.png"), width = 600, height = 800)
plot(scoreDistribution)
dummy <- dev.off()
print(paste(Sys.time(), " Loading data", sep = ""))
phenoDF <- read.table(phenoFile, header = T, sep = ",", stringsAsFactors = F)
names(phenoDF) <- c("id", "t1d", "Control")
## Format identifiers
scoresDF$id <- sapply(X = scoresDF$Sample, FUN = getId)
## Merge
mergedDF <- merge(x = phenoDF, y = scoresDF, by = "id", all = F)
## Plot score distribution
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = Control, y = Score, fill = Control, col = Control), alpha = 0.5, width = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = Control, y = Score, col = Control), alpha = 0.2, scale = F, maxwidth = 1)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
png(filename = file.path(plotFolder, "scores.png"), width = 600, height = 800)
plot(scoreDistribution)
dummy <- dev.off()
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = Control, y = Score, fill = Control, col = Control), alpha = 0.5, width = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = Control, y = Score, col = Control), alpha = 0.2, scale = F, maxwidth = 1)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + ylab("T1D Score")
png(filename = file.path(plotFolder, "scores.png"), width = 600, height = 800)
plot(scoreDistribution)
dummy <- dev.off()
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = Control, y = Score, fill = Control, col = Control), alpha = 0.5, width = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = Control, y = Score, col = Control), alpha = 0.2, scale = F, maxwidth = 1, size = 1.2)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + ylab("T1D Score")
png(filename = file.path(plotFolder, "scores.png"), width = 600, height = 800)
plot(scoreDistribution)
dummy <- dev.off()
scoreDistribution <- ggplot()
scoreDistribution <- scoreDistribution + geom_violin(data = mergedDF, mapping = aes(x = Control, y = Score, fill = Control, col = Control), alpha = 0.5, width = 0.5)
scoreDistribution <- scoreDistribution + geom_sina(data = mergedDF, mapping = aes(x = Control, y = Score, col = Control, size = Control), alpha = 0.2, scale = F, maxwidth = 1)
scoreDistribution <- scoreDistribution + scale_fill_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_color_manual(values = c(t1dColor, controlColor))
scoreDistribution <- scoreDistribution + scale_size_manual(values = c(2, 0.5))
scoreDistribution <- scoreDistribution + ylab("T1D Score")
png(filename = file.path(plotFolder, "scores.png"), width = 600, height = 800)
plot(scoreDistribution)
dummy <- dev.off()
